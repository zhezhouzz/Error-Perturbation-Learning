Pre
let spec (i_0:int) (it_0:int tree)  = true
Perturbation
IN: (x0: int, x1: int tree) {
(x2: int tree, x3: int tree) = tree_left_right_subtree(x1: int tree);
(x4: int) = tree_root(x1: int tree);
(x5: int tree) = tree_node(x4: int, x2: int tree, x3: int tree);
(x6: int tree) = tree_append_to_right_most(x4: int, x5: int tree)}
OUT: (x0: int, x6: int tree)

Default
IN: (x0: int, x1: int tree) {
(x2: int) = tree_min(x1: int tree);
(x3: int) = minus1(x2: int);
(x4: int tree) = tree_append_to_right_most(x2: int, x1: int tree);
(x5: int tree) = tree_append_to_right_most(x3: int, x4: int tree)}
OUT: (x0: int, x5: int tree)