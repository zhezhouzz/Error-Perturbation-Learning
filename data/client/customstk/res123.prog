let i_err = ([ 14 ], [ 0; 13 ])
Pre
let spec (x0: int list) (x1: int list) = true
Perturbation
IN: (x0: int list, x1: int list) {
(x2: int) = bottom(x1: int list);
(x3: int) = plus1(x2: int);
(x4: int list) = insert(x1: int list, x2: int, x3: int);
(x5: int) = bottom(x1: int list)}
OUT: (x4: int list, x0: int list)
Pre
let spec (x0: int list) (x1: int list) = true
Perturbation
IN: (x0: int list, x1: int list) {
(x2: int) = bottom(x1: int list);
(x3: int) = plus1(x2: int);
(x4: int list) = append(x0: int list, x3: int);
(x5: int, x6: int list) = list_destruct(x4: int list)}
OUT: (x6: int list, x4: int list)
Default
IN: (x0: int list, x1: int list) {
(x2: int) = max(x0: int list);
(x3: int) = plus1(x2: int);
(x4: int list, x5: int list) = list_alter_partition(x1: int list);
(x6: int list) = append(x5: int list, x3: int)}
OUT: (x6: int list, x4: int list)